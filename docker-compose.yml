version: '3.8'

services:
  client:
    hostname: client
    build:
      context: protato-web-client
      dockerfile: Dockerfile
    ports:
      - 3000:3000

    networks:
      - shared-network

  server:
    hostname: server
    build:
      context: express-server
      dockerfile: Dockerfile
    ports:
      - 6789:6789
    environment:
      - PORT=6789
      - UDP_SERVER_PORT=3333
      - MONGO_URI=mongodb://db:27017/protato
      - JWT_SECRET=secret
      - EMAIL_HOST=<YOUR_EMAIL_SERVICE_HOST>
      - EMAIL_USER=<YOUR_EMAIL_SERVICE_USER>
      - EMAIL_PASSWORD=<YOUR_EMAIL_SERVICE_PASS>
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    depends_on:
      depends_on:
        db:
          condition: service_started
        redis:
          condition: service_started

    networks:
      - shared-network

  redis:
    image: redis
    hostname: redis
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - shared-network

  db:
    image: mongo:latest
    hostname: db
    ports:
      - 27017:27017
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    networks:
      - shared-network

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 3333:3333/udp # Expose UDP port 3333
    depends_on:
      server:
        condition: service_started

    networks:
      - shared-network

volumes:
  redis-data:
  mongo-data:


networks:
  shared-network:
    driver: bridge
